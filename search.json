[{"path":"https://natverse.github.io/nat.ggplot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Alexander Shakeel Bates Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-a-basic-neuron-plot","dir":"Articles","previous_headings":"","what":"1 — How to make a basic neuron plot","title":"Plot examples from the BANC connectome","text":"minimal 2D view neuron meshes predefined rotation matrix.","code":"nat.ggplot::ggneuron(banc.meshes, rotation_matrix = banc_view) #> Warning in rgl.init(initValue, onlyNULL): RGL: unable to open X11 display #> Warning: 'rgl.init' failed, will use the null device. #> See '?rgl.useNULL' for ways to avoid this warning. #> Registered S3 method overwritten by 'nat': #>   method             from #>   as.mesh3d.ashape3d rgl"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-a-layered-context-plot-brain-meshes-skeleton-roots","dir":"Articles","previous_headings":"","what":"2 — How to make a layered context plot (brain + meshes + skeleton roots)","title":"Plot examples from the BANC connectome","text":"Layer meshes, brain outline, smoothed skeletons.","code":"# Smooth skeletons for presentation banc.skels_smoothed <- nat::nlapply(banc.skels, nat::smooth_neuron, sigma = 5000)  nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.brain_neuropil,     rotation_matrix = banc_view,     cols = c(\"grey90\", \"grey60\"),     alpha = 0.3   ) +   nat.ggplot::geom_neuron(     banc.meshes,     rotation_matrix = banc_view,     cols = c(\"#6D2C7B\", \"#FF1493\", \"green\", \"blue\"),     alpha = 0.3   ) +   nat.ggplot::geom_neuron(     banc.skels_smoothed,     size = 0.01,     alpha = 0.5,     root = 1,     rotation_matrix = banc_view,     cols = \"black\"   )"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-capture-a-3d-view-and-reuse-it-in-2d-interactive-optional","dir":"Articles","previous_headings":"","what":"3 — How to capture a 3D view and reuse it in 2D (interactive; optional)","title":"Plot examples from the BANC connectome","text":"Use nat::plot3d() rgl rotate interactively, capture view. Disabled build.","code":"if (requireNamespace(\"rgl\", quietly = TRUE)) {   nat::plot3d(banc.brain_neuropil, alpha = 0.3, col = \"grey\")   nat::plot3d(banc.skels_smoothed)   my_view <- nat.ggplot::rgl_view()   nat.ggplot::ggneuron(banc.skels_smoothed, rotation_matrix = my_view$userMatrix) }"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-fixed-frontsidedorsalventral-views","dir":"Articles","previous_headings":"","what":"4 — How to make fixed ‘front/side/dorsal/ventral’ views","title":"Plot examples from the BANC connectome","text":"Define rotation matrices reuse render consistent views.","code":"views <- list(   side = structure(c(0.000764884985983372, 0.0153511334210634,      -0.99988180398941, 0, -0.940421104431152, -0.339961022138596,      -0.00593886896967888, 0, -0.340011894702911, 0.94031423330307,      0.0141764245927334, 0, -401395.405539944, -128785.809090088,      -5607.3408203126, 1), dim = c(4L, 4L)),   front = structure(c(0.99931389093399, 0.0139970388263464,      -0.0342894680798054, 0, -0.0321401171386242, -0.132316529750824,      -0.990686297416687, 0, -0.0184037387371063, 0.991108655929565,      -0.131775915622711, 0, 0, 0, 0, 1), dim = c(4L, 4L)),   dorsal = structure(c(0.840221107006073, 0.537661552429199,      -0.0703445374965668, 0, -0.541468024253845, 0.838866174221039,      -0.0558210015296936, 0, 0.0289968233555555, 0.0849913582205772,      0.9959596991539, 0, 0, 0, 0, 1), dim = c(4L, 4L)),   ventral = structure(c(0.945645987987518, -0.325197845697403,      3.18996608257294e-05, 0, -0.30071958899498, -0.874427616596222,      0.380715191364288, 0, -0.123779848217964, -0.360031485557556,      -0.924692392349243, 0, 0, 0, 0, 1), dim = c(4L, 4L)) )  nat.ggplot::ggneuron(   banc.meshes,   rotation_matrix = views$front,   cols1 = c(\"#8B1A89\", \"#FF69B4\"),   cols2 = c(\"grey95\", \"grey85\"),   alpha = 0.8,   info = \"Front view\" )"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-a-brain-neuropil-backdrop","dir":"Articles","previous_headings":"","what":"5 — How to make a brain neuropil backdrop","title":"Plot examples from the BANC connectome","text":"Render neuropil mesh translucent context layer.","code":"nat.ggplot::ggneuron(   banc.brain_neuropil,   rotation_matrix = banc_view,   cols1 = c(\"orange\", \"#EFC7E6\"),   alpha = 0.1 )"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-neuron-plots-with-custom-colours","dir":"Articles","previous_headings":"","what":"6 — How to make neuron plots with custom colours","title":"Plot examples from the BANC connectome","text":"Single colour, gradient, per-neuron palettes.","code":"# Single colour nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.skels_smoothed,     rotation_matrix = banc_view,     cols = \"purple\"   ) # Gradient along arbour / depth nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.meshes[1],     rotation_matrix = banc_view,     cols = c(\"purple\", \"orange\")   ) # Distinct colours per neuron neuron_colours <- c(\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#FFA07A\", \"#98D8C8\")  nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.brain_neuropil,     rotation_matrix = banc_view,     cols = c(\"grey95\", \"grey80\"),     alpha = 0.2   ) +   nat.ggplot::geom_neuron(     banc.skels_smoothed,     rotation_matrix = banc_view,     cols = neuron_colours   )"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-a-synapse-plot-inputs-vs-outputs","dir":"Articles","previous_headings":"","what":"7 — How to make a synapse plot (inputs vs outputs)","title":"Plot examples from the BANC connectome","text":"Overlay synaptic sites points; separate prepost (0 = outputs, 1 = inputs).","code":"syns_pre  <- dplyr::filter(banc.syns, prepost == 0) syns_post <- dplyr::filter(banc.syns, prepost == 1)  nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.meshes,     rotation_matrix = banc_view,     cols = c(\"grey60\", \"grey40\"),     alpha = 0.8   ) +   nat.ggplot::geom_neuron(     syns_pre,     rotation_matrix = banc_view,     root = 0.5,     cols = c(\"#EE4244\", \"#8B0000\"),     alpha = 0.6   ) +   nat.ggplot::geom_neuron(     syns_post,     rotation_matrix = banc_view,     root = 0.5,     cols = c(\"#1BB6AF\", \"#121B56\"),     alpha = 0.6   )"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-an-axondendrite-split-plot","dir":"Articles","previous_headings":"","what":"8 — How to make an axon–dendrite split plot","title":"Plot examples from the BANC connectome","text":"Colour compartments using flow-centrality-based identities.","code":"# Single neuron nat.ggplot::ggneuron(   banc.neurons.flow[[1]],   threshold = 20000,   rotation_matrix = banc_view,   info = paste(\"neuron:\", names(banc.neurons.flow)[1]) ) #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length40570.11 is above threshold # Multiple neurons (with optional brain volume) nat.ggplot::ggneuron(   banc.neurons.flow,   # volume = banc.brain_neuropil,   threshold = 20000,   rotation_matrix = banc_view,   info = \"LHPD2a1 neurons:\\n axon (orange), dendrite (cyan), primary neurite (purple), linker (green)\\n inputs (navy), outputs (red)\" ) #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length40570.11 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length48970.73 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length52407.35 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length49254.28 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length27245.48 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length25094.17 is above threshold"},{"path":"https://natverse.github.io/nat.ggplot/articles/banc_examples.html","id":"how-to-make-a-figure-with-zoom-to-bounds","dir":"Articles","previous_headings":"","what":"9 — How to make a figure with zoom-to-bounds","title":"Plot examples from the BANC connectome","text":"Compute bounding box rotated plane; zoom ggplot2::coord_fixed().","code":"mesh_bounds <- do.call(rbind, lapply(banc.meshes, function(mesh) {   vertices <- t(mesh$vb[-4, ])   if (!is.null(banc_view)) {     vertices <- t(banc_view[1:3, 1:3] %*% t(vertices))   }   data.frame(X = vertices[, 1], Y = vertices[, 2]) }))  x_range <- range(mesh_bounds$X) y_range <- range(mesh_bounds$Y) x_padding <- diff(x_range) * 0.1 y_padding <- diff(y_range) * 0.1  nat.ggplot::g.anat +   nat.ggplot::geom_neuron(     banc.brain_neuropil,     rotation_matrix = banc_view,     cols = c(\"grey95\", \"grey85\"),     alpha = 0.3   ) +   nat.ggplot::geom_neuron(     banc.meshes,     rotation_matrix = banc_view,     cols = c(\"grey60\", \"grey40\"),     alpha = 0.8   ) +   nat.ggplot::geom_neuron(     banc.neurons.flow,     threshold = 15000,     root = 2,     size = 0.1,     rotation_matrix = banc_view   ) +   ggplot2::coord_fixed(     xlim = c(x_range[1] - x_padding, x_range[2] + x_padding),     ylim = c(y_range[1] - y_padding, y_range[2] + y_padding)   ) +   ggplot2::theme(     plot.background = ggplot2::element_rect(fill = \"white\", color = NA),     plot.title = ggplot2::element_text(hjust = 0.5, size = 14, face = \"bold\"),     plot.subtitle = ggplot2::element_text(hjust = 0.5, size = 10),     plot.margin = ggplot2::margin(10, 10, 10, 10)   ) +   ggplot2::labs(     title = \"LHPD2a1\",     subtitle = \"lateral horn output neurons from the BANC connectome\"   ) #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length40570.11 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length48970.73 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length52407.35 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length49254.28 is above threshold #> Warning in nat::stitch_neurons_mst(axon, threshold = threshold): Could not #> connect two vertices as edge length19129.53 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length27245.48 is above threshold #> Warning in nat::stitch_neurons_mst(dendrites, threshold = threshold): Could not #> connect two vertices as edge length25094.17 is above threshold #> Coordinate system already present. #> ℹ Adding new coordinate system, which will replace the existing one."},{"path":"https://natverse.github.io/nat.ggplot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Bates. Author, maintainer.","code":""},{"path":"https://natverse.github.io/nat.ggplot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bates (2025). nat.ggplot: Functions creating neuroanatomy plots ggplot2 nat. R package version 0.1.0, https://github.com/natverse/nat.ggplot.","code":"@Manual{,   title = {nat.ggplot: Functions for creating neuroanatomy plots with ggplot2 and nat},   author = {Alexander Bates},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/natverse/nat.ggplot}, }"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"natggplot","dir":"","previous_headings":"","what":"nat.ggplot","title":"nat.ggplot","text":"nat.ggplot enables Neuroanatomy Toolbox (nat) suite create publication-quality 2D visualisations neurons brain meshes using ggplot2. package bridges gap nat’s 3D neuroanatomy capabilities ggplot2’s 2D plotting framework, allowing users create figures neuronal morphology data. README uses sample data BANC connectome, package valid neuroanatomical data organism, can represented neuron object, .swc, mesh3d, .surf, .obj file, etc. See nat details reading neuroanatomy data R.","code":""},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"about-neuron-objects","dir":"","previous_headings":"","what":"About Neuron Objects","title":"nat.ggplot","text":"natverse ecosystem, neurons represented tree structures containing 3D coordinates connectivity information. main data structures include: neuron: single neuron XYZ coordinates parent-child connectivity defining tree structure, neuron$d provides data style .swc file, neuron$d$Label can give arbour type, e.g. dendrite versus axon. neuronlist: collection neurons can manipulated together, bundled list class ‘neuronlist’ mesh3d: 3D surface meshes representing brain regions neuron surfaces Synaptic information: Pre- postsynaptic site locations can overlaid morphology details, see natverse neurons introduction","code":""},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"nat.ggplot","text":"can install development version nat.ggplot GitHub :","code":"# install.packages(\"remotes\") remotes::install_github('natverse/nat.ggplot')"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"nat.ggplot","text":"complicated plot, brain mesh, neuron meshes, skeletons root points highlighted small black circle:","code":"library(nat.ggplot) library(ggplot2) library(dplyr)  # Set output directory for saving figures (change as needed) output_dir <- \"inst/images/\" if (!dir.exists(output_dir)) dir.create(output_dir, recursive = TRUE)  # Visualise neurons with default settings p <- ggneuron(banc.meshes, rotation_matrix = banc_view) p ggsave(file.path(output_dir, \"quickstart_basic.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\") # Smooth neurons for better presentation banc.skels_smoothed <- nat::nlapply(banc.skels,nat::smooth_neuron,sigma = 5000)  # Customise visualisation with g.anat base p <- g.anat +    geom_neuron(banc.brain_neuropil,                rotation_matrix = banc_view,               cols = c(\"grey90\", \"grey60\"),               alpha = 0.3) +   geom_neuron(banc.meshes,               rotation_matrix = banc_view,               cols = c(\"#6D2C7B\", \"#FF1493\", \"green\", \"blue\"),               alpha = 0.3) +   geom_neuron(banc.skels_smoothed,               size = 0.01,               alpa = 0.5,               root = 1,               rotation_matrix = banc_view,               cols = \"black\") p ggsave(file.path(output_dir, \"quickstart_custom.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"finding-the-right-view","dir":"","previous_headings":"Quick Start","what":"Finding the Right View","title":"nat.ggplot","text":"Compared simple rgl plot neurons (e.g. plot3d(banc.skels)), challenge nat.ggplot2 need transform data, view wish, X-axis horziontal extent view Y-axis vertical. , can call plot3d(banc.skels), position neurons view like, use helper function rgl_view, extract view matrix:","code":"library(nat)  # for plot3d library(rgl)  # for 3D interaction  # Step 1: Plot neurons in 3D and rotate to desired view plot3d(banc.brain_neuropil, alpha = 0.3, col = \"grey\") plot3d(banc.skels_smoothed)  # Step 2: Rotate with mouse to find the desired angle # Step 3: Capture the view my_view <- rgl_view()  # Step 4: Use the captured view in ggplot2 ggneuron(banc.skels_smoothed, rotation_matrix = my_view$userMatrix)"},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"setting-a-view-for-neuron-data","dir":"","previous_headings":"Example Gallery","what":"Setting a view for neuron data","title":"nat.ggplot","text":"view BANC brain neuropil mesh, extracted way:","code":"# Define the different view matrices from bancr views <- list(   side = structure(c(0.000764884985983372, 0.0153511334210634,      -0.99988180398941, 0, -0.940421104431152, -0.339961022138596,      -0.00593886896967888, 0, -0.340011894702911, 0.94031423330307,      0.0141764245927334, 0, -401395.405539944, -128785.809090088,      -5607.3408203126, 1), dim = c(4L, 4L)),     front = structure(c(0.99931389093399, 0.0139970388263464,        -0.0342894680798054, 0, -0.0321401171386242, -0.132316529750824,        -0.990686297416687, 0, -0.0184037387371063, 0.991108655929565,        -0.131775915622711, 0, 0, 0, 0, 1), dim = c(4L, 4L)),       dorsal = structure(c(0.840221107006073, 0.537661552429199,    -0.0703445374965668, 0, -0.541468024253845, 0.838866174221039,    -0.0558210015296936, 0, 0.0289968233555555, 0.0849913582205772,    0.9959596991539, 0, 0, 0, 0, 1), dim = c(4L, 4L)),   ventral = structure(c(0.945645987987518, -0.325197845697403,    3.18996608257294e-05, 0, -0.30071958899498, -0.874427616596222,    0.380715191364288, 0, -0.123779848217964, -0.360031485557556,    -0.924692392349243, 0, 0, 0, 0, 1), dim = c(4L, 4L)) )  # Create plots for each view plots <- list() for(view_name in names(views)) {   plots[[view_name]] <- ggneuron(     banc.meshes,     volume = NULL, # banc.brain_neuropil,     rotation_matrix = views[[view_name]],     cols1 = c(\"#8B1A89\", \"#FF69B4\"),     cols2 = c(\"grey95\", \"grey85\"),     alpha = 0.8,     info = paste(substring(view_name, 1, 1),                   substring(view_name, 2), \" view\", sep=\"\")   ) }  # Display and save individual views plots$side ggsave(file.path(output_dir, \"view_side.png\"), plots$side, width = 5, height = 5, dpi = 300, bg = \"white\")  plots$front ggsave(file.path(output_dir, \"view_front.png\"), plots$front, width = 5, height = 5, dpi = 300, bg = \"white\")  # Create a collage using cowplot if (requireNamespace(\"cowplot\", quietly = TRUE)) {   library(cowplot)   # Combine plots in a 2x2 grid   collage <- plot_grid(     plots$front + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10), legend.position = \"none\"),     plots$side + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10), legend.position = \"none\"),     plots$dorsal + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10), legend.position = \"none\"),     plots$ventral + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10), legend.position = \"none\"),     ncol = 2,     labels = c(\"A\", \"B\", \"C\", \"D\"),     label_size = 12   )   collage   ggsave(file.path(output_dir, \"views_collage.png\"), collage, width = 10, height = 10, dpi = 300, bg = \"white\") }"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"visualising-brain-neuropil","dir":"","previous_headings":"Example Gallery","what":"Visualising Brain Neuropil","title":"nat.ggplot","text":"can visualise brain neuropil mesh different colours transparency:","code":"# Brain neuropil with custom colours p <- ggneuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols1 = c(\"orange\", \"#EFC7E6\"),                alpha = 0.1) p ggsave(file.path(output_dir, \"brain_neuropil.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"plotting-neurons-with-custom-colours","dir":"","previous_headings":"Example Gallery","what":"Plotting Neurons with Custom Colours","title":"nat.ggplot","text":"Visualise multiple neurons different colouring schemes:","code":"# All neurons in one colour p <- g.anat +   geom_neuron(banc.skels_smoothed,               rotation_matrix = banc_view,               cols = c(\"purple\")) p ggsave(file.path(output_dir, \"neurons_single_colour.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\") # Colour gradient in the Z dimension: p <- g.anat +   geom_neuron(banc.meshes[1],               rotation_matrix = banc_view,               cols = c(\"purple\", \"orange\")) p ggsave(file.path(output_dir, \"neurons_gradient.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\") # Each neuron in a different colour neuron_colours <- c(\"#FF6B6B\", \"#4ECDC4\", \"#45B7D1\", \"#FFA07A\", \"#98D8C8\") p <- g.anat +   geom_neuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols = c(\"grey95\", \"grey80\"),               alpha = 0.2) +   geom_neuron(banc.skels_smoothed,               rotation_matrix = banc_view,               cols = neuron_colours) p ggsave(file.path(output_dir, \"neurons_multi_colour.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"visualising-synapses","dir":"","previous_headings":"Example Gallery","what":"Visualising Synapses","title":"nat.ggplot","text":"Display synaptic sites coloured points:","code":"# Create synapse visualisation p <- g.anat +   # Neuron meshes   geom_neuron(banc.meshes,               rotation_matrix = banc_view,               cols = c(\"grey60\", \"grey40\"),               alpha = 0.8) +   # Synapses as points   geom_neuron(banc.syns %>% # Just output synapses                        dplyr::filter(prepost==0),              rotation_matrix = banc_view,              root = 0.5,  # Point size for synapses              cols = c(\"#EE4244\", \"#8B0000\"),              alpha = 0.6) +   geom_neuron(banc.syns %>% # Just input synapses                        dplyr::filter(prepost==1),              rotation_matrix = banc_view,              root = 0.5,  # Point size for synapses              cols = c(\"#1BB6AF\", \"#121B56\"),              alpha = 0.6) p ggsave(file.path(output_dir, \"synapses_visualisation.png\"), p, width = 7, height = 7, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"axon-dendrite-split-visualisation","dir":"","previous_headings":"Example Gallery","what":"Axon-Dendrite Split Visualisation","title":"nat.ggplot","text":"Visualise neurons compartments coloured functional identity (using flow centrality Schneider-Mizell et al., 2016). Note algorithm implemented R package hemibrainr, .","code":"# Single neuron with axon/dendrite split p <- ggneuron(banc.neurons.flow[[1]],                threshold = 20000, # Max distance over which a line is drawn between matching arbour               rotation_matrix = banc_view,               info = paste(\"neuron: \", names(banc.neurons.flow)[1])) p ggsave(file.path(output_dir, \"split_single_neuron.png\"), p, width = 6, height = 6, dpi = 300, bg = \"white\") # All split neurons with brain context p <- ggneuron(banc.neurons.flow,               #volume = banc.brain_neuropil,               threshold = 20000,               rotation_matrix = banc_view,               info = \"LHPD2a1 neurons:\\n axon (orange), dendrite (cyan), primary neurite (purple), linker (green)\\n inputs (navy), outputs (red)\") p ggsave(file.path(output_dir, \"split_all_neurons.png\"), p, width = 7, height = 7, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"creating-figures","dir":"","previous_headings":"Example Gallery","what":"Creating Figures","title":"nat.ggplot","text":"Combine multiple elements figure:","code":"library(ggplot2)  # Create comprehensive visualisation with zoom # Calculate bounding box of meshes after rotation mesh_bounds <- do.call(rbind, lapply(banc.meshes, function(mesh) {   vertices <- t(mesh$vb[-4,])   if(!is.null(banc_view)) {     vertices <- t(banc_view[1:3, 1:3] %*% t(vertices))   }   data.frame(X = vertices[,1], Y = vertices[,2]) }))  # Add some padding (10% on each side) x_range <- range(mesh_bounds$X) y_range <- range(mesh_bounds$Y) x_padding <- diff(x_range) * 0.1 y_padding <- diff(y_range) * 0.1  p <- g.anat +   # Add brain outline   geom_neuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols = c(\"grey95\", \"grey85\"),               alpha = 0.3) +   # Add neuron meshes   geom_neuron(banc.meshes,               rotation_matrix = banc_view,               cols = c(\"grey60\", \"grey40\"),               alpha = 0.8) +   # Add split neurons   geom_neuron(banc.neurons.flow,               threshold = 15000,               root = 2,               size = 0.1,               rotation_matrix = banc_view) +   # Zoom to neuron mesh bounds   coord_fixed(xlim = c(x_range[1] - x_padding, x_range[2] + x_padding),               ylim = c(y_range[1] - y_padding, y_range[2] + y_padding)) +   # Add title   theme(plot.background = element_rect(fill = \"white\", color = NA),         plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),         plot.subtitle = element_text(hjust = 0.5, size = 10),         plot.margin = margin(10, 10, 10, 10)) +   labs(title = \"LHPD2a1\",        subtitle = \"lateral horn output neurons from the BANC connectome\") p  # Save figure # ggsave(\"lhpd2a1_neurons.pdf\", p, width = 12, height = 12, dpi = 300) ggsave(file.path(output_dir, \"figure_comprehensive.png\"), p, width = 7, height = 7, dpi = 300, bg = \"white\")"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"data-attribution","dir":"","previous_headings":"","what":"Data Attribution","title":"nat.ggplot","text":"package includes example data BANC (Brain Nerve Cord) connectome: LHPD2a1 neurons: First characterized Dolan et al. (2018) Neuron BANC connectome data: Bates et al. (2025) bioRxiv","code":""},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"integration-with-ggplot2-ecosystem","dir":"","previous_headings":"Advanced Features","what":"Integration with ggplot2 Ecosystem","title":"nat.ggplot","text":"package works ggplot2 extensions:","code":"library(ggplot2) library(cowplot)  # For combining plots  # Create multiple panels - save individually p1 <- g.anat +    geom_neuron(banc.skels_smoothed[[1]], rotation_matrix = banc_view) +   ggtitle(\"Neuron 1\") ggsave(file.path(output_dir, \"panel_neuron1.png\"), p1, width = 4, height = 4, dpi = 300, bg = \"white\")  p2 <- g.anat +    geom_neuron(banc.skels_smoothed[[2]], rotation_matrix = banc_view) +   ggtitle(\"Neuron 2\") ggsave(file.path(output_dir, \"panel_neuron2.png\"), p2, width = 4, height = 4, dpi = 300, bg = \"white\")  # Alternative 1: Use cowplot for combining plots if (requireNamespace(\"cowplot\", quietly = TRUE)) {   library(cowplot)      # Remove the theme elements that might conflict   p1_clean <- p1 + theme_void() + ggtitle(\"Neuron 1\")   p2_clean <- p2 + theme_void() + ggtitle(\"Neuron 2\")      # Combine with cowplot   p_combined <- plot_grid(p1_clean, p2_clean, ncol = 2, labels = c(\"A\", \"B\"))   p_combined   ggsave(file.path(output_dir, \"panels_combined_cowplot.png\"), p_combined, width = 8, height = 4, dpi = 300, bg = \"white\") }  # Alternative 2: Use gridExtra for combining plots if (requireNamespace(\"gridExtra\", quietly = TRUE)) {   library(gridExtra)      # Convert plots to grobs   g1 <- ggplotGrob(p1)   g2 <- ggplotGrob(p2)      # Arrange in grid   p_combined <- grid.arrange(g1, g2, ncol = 2)   ggsave(file.path(output_dir, \"panels_combined_gridextra.png\"), p_combined, width = 8, height = 4, dpi = 300, bg = \"white\") }  # Alternative 3: Use base R graphics with png files # Save individual plots first (already done above) # Then combine the PNG files using magick or other image processing if (requireNamespace(\"magick\", quietly = TRUE)) {   library(magick)      # Read the individual plot images   img1 <- image_read(file.path(output_dir, \"panel_neuron1.png\"))   img2 <- image_read(file.path(output_dir, \"panel_neuron2.png\"))      # Combine side by side   img_combined <- image_append(c(img1, img2))      # Save combined image   image_write(img_combined, file.path(output_dir, \"panels_combined_cowplot.png\")) }"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"controlling-line-width","dir":"","previous_headings":"Advanced Features","what":"Controlling Line Width","title":"nat.ggplot","text":"size parameter controls thickness neuron skeleton lines:","code":"# Create plots with different line widths p_thin <- g.anat +    geom_neuron(banc.skels_smoothed,                rotation_matrix = banc_view,               size = 0.2,  # Thin lines               cols = c(\"#FF1493\", \"#8B008B\")) +   ggtitle(\"Thin lines (size = 0.2)\") ggsave(file.path(output_dir, \"size_thin.png\"), p_thin, width = 5, height = 5, dpi = 300, bg = \"white\")  p_normal <- g.anat +    geom_neuron(banc.skels_smoothed,                rotation_matrix = banc_view,               size = 0.5,  # Default               cols = c(\"#FF1493\", \"#8B008B\")) +   ggtitle(\"Normal lines (size = 0.5)\") ggsave(file.path(output_dir, \"size_normal.png\"), p_normal, width = 5, height = 5, dpi = 300, bg = \"white\")  p_thick <- g.anat +    geom_neuron(banc.skels_smoothed,                rotation_matrix = banc_view,               size = 1,  # Thick lines               cols = c(\"#FF1493\", \"#8B008B\")) +   ggtitle(\"Thick lines (size = 1)\") ggsave(file.path(output_dir, \"size_thick.png\"), p_thick, width = 5, height = 5, dpi = 300, bg = \"white\")  # Combine using cowplot if (requireNamespace(\"cowplot\", quietly = TRUE)) {   library(cowplot)   size_comparison <- plot_grid(     p_thin + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10, legend.position = \"none\")),     p_normal + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10, legend.position = \"none\")),     p_thick + theme_void() + theme(plot.title = element_text(hjust = 0.5, size = 10, legend.position = \"none\")),     ncol = 3,     labels = c(\"A\", \"B\", \"C\"),     label_size = 10   ) +   ggplot2::theme(legend.position = \"none\")   size_comparison   ggsave(file.path(output_dir, \"size_comparison.png\"), size_comparison, width = 12, height = 4, dpi = 300, bg = \"white\") }"},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"nat.ggplot","text":"package developed Alexander Shakeel Bates laboratory Rachel . Wilson Harvard Medical School. package leverages natverse ecosystem neuroanatomy R.","code":""},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"nat.ggplot","text":"Key papers referenced package: Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., et al. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi: 10.1101/2025.07.31.667571 Bates, Alexander Shakeel, James D. Manton, Sridhar R. Jagannathan, Marta Costa, Philipp Schlegel, Torsten Rohlfing, Gregory Sxe Jefferis. 2020. “Natverse, Versatile Toolbox Combining Analysing Neuroanatomical Data.” eLife 9 (April). eLife.53350 Dolan, M. J., et al. (2018). Communication learned innate olfactory processing centers required memory retrieval Drosophila. Neuron, 100(3), 651-668. doi: 10.1016/j.neuron.2018.08.037 Jefferis, G. S. X. E., et al. (2007). Comprehensive maps Drosophila higher olfactory centers. Cell, 128(6), 1187-1203. doi: 10.1016/j.cell.2007.01.040 Schneider-Mizell, C. M., et al. (2016). Quantitative neuroanatomy connectomics Drosophila. eLife, 5, e12059. doi: 10.7554/eLife.12059","code":""},{"path":"https://natverse.github.io/nat.ggplot/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"nat.ggplot","text":"issues feature requests, please use GitHub issue tracker general natverse questions, visit natverse documentation BANC connectome data, see bancr package","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":null,"dir":"Reference","previous_headings":"","what":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"simplified mesh3d object representing brain neuropil volume BANC connectome dataset. mesh decimated approximately 50% original face count efficient visualisation.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"","code":"banc.brain_neuropil"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"mesh3d object containing vertices faces defining 3D surface Drosophila brain neuropil.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"BANC connectome dataset, decimated using Rvcg::vcgQEdecim.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., Dunne, J., Roat, J., Joyce, P., Bogovic, J. ., Jefferis, G. S. X. E., Murthy, M., Card, G., & FlyWire Consortium. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi:10.1101/2025.07.31.667571","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.brain_neuropil.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low Resolution BANC Brain Neuropil Mesh — banc.brain_neuropil","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot) library(ggplot2)  # Plot brain neuropil with default view ggplot() +   geom_neuron(banc.brain_neuropil,               cols = c(\"grey75\", \"grey50\"),               alpha = 0.3)  # Plot with frontal view ggplot() +   geom_neuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols = c(\"grey75\", \"grey50\"),               alpha = 0.3) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":null,"dir":"Reference","previous_headings":"","what":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"list simplified mesh3d objects representing 3D surface reconstructions 4 LHPD2a1 neurons BANC connectome dataset.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"","code":"banc.meshes"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"list 5 mesh3d objects, containing vertices faces defining 3D surface neuron.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"BANC connectome dataset, accessed via bancr::banc_read_neuron_meshes decimated using Rvcg::vcgQEdecim.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"Dolan, M. J., Belliart-Guérin, G., Bates, . S., Frechter, S., Lampin-Saint-Amaux, ., Aso, Y., Roberts, R. J. V., Schlegel, P., Wong, ., Hammad, ., Bock, D., Rubin, G. M., Preat, T., Plaçais, P. Y., & Jefferis, G. S. X. E. (2018). Communication learned innate olfactory processing centers required memory retrieval Drosophila. Neuron, 100(3), 651-668.e8. doi:10.1016/j.neuron.2018.08.037 Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., Dunne, J., Roat, J., Joyce, P., Bogovic, J. ., Jefferis, G. S. X. E., Murthy, M., Card, G., & FlyWire Consortium. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi:10.1101/2025.07.31.667571","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.meshes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low Resolution LHPD2a1 Neuron Meshes from BANC — banc.meshes","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot) library(ggplot2)  # Plot first neuron mesh ggplot() +   geom_neuron(banc.meshes[[1]],               rotation_matrix = banc_view,               cols = c(\"purple\", \"magenta\"))  # Plot all neuron meshes ggneuron(banc.meshes,          rotation_matrix = banc_view,          cols = c(\"purple\", \"magenta\")) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":null,"dir":"Reference","previous_headings":"","what":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"neuronlist containing LHPD2a1 neurons split axonal dendritic compartments using flow centrality analysis. method, described Schneider-Mizell et al. (2016), uses spatial distribution pre- postsynaptic sites segregate neuronal arbors functionally distinct compartments.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"","code":"banc.neurons.flow"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"neuronlist object neurons containing additional Label field data frames indicating compartment type: Label = 2 Axon Label = 3 Dendrite Label = 4 Primary dendrite Label = 7 Primary neurite Label = 0 NA Unclassified","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"BANC connectome dataset (Bates et al., 2025). Split using flow centrality method hemibrainr package.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"Schneider-Mizell, C. M., Gerhard, S., Longair, M., Kazimiers, T., Li, F., Zwart, M. F., Champion, ., Midgley, F. M., Fetter, R. D., Saalfeld, S., & Cardona, . (2016). Quantitative neuroanatomy connectomics Drosophila. eLife, 5, e12059. doi:10.7554/eLife.12059 Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., Dunne, J., Roat, J., Joyce, P., Bogovic, J. ., Jefferis, G. S. X. E., Murthy, M., Card, G., & FlyWire Consortium. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi:10.1101/2025.07.31.667571","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.neurons.flow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flow Centrality Split LHPD2a1 Neurons from BANC — banc.neurons.flow","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot) library(ggplot2)  # Plot split neurons showing axon/dendrite compartments ggplot() + geom_neuron(banc.neurons.flow[[1]], rotation_matrix = banc_view)  # Plot all split neurons ggneuron(banc.neurons.flow, rotation_matrix = banc_view) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":null,"dir":"Reference","previous_headings":"","what":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"neuronlist containing skeletonised morphologies 5 LHPD2a1 neurons BANC (Brain Nerve Cord) connectome dataset. neurons lateral horn local neurons first described LHPD2a1 Dolan et al. (2018) adult fly brain. skeletons processed using wavefront skeletonisation rerooted.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"","code":"banc.skels"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"neuronlist object containing 5 neurons 3D point coordinates connectivity information.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"BANC connectome dataset (Bates et al., 2025). Data accessed via bancr package.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"Dolan, M. J., Belliart-Guérin, G., Bates, . S., Frechter, S., Lampin-Saint-Amaux, ., Aso, Y., Roberts, R. J. V., Schlegel, P., Wong, ., Hammad, ., Bock, D., Rubin, G. M., Preat, T., Plaçais, P. Y., & Jefferis, G. S. X. E. (2018). Communication learned innate olfactory processing centers required memory retrieval Drosophila. Neuron, 100(3), 651-668.e8. doi:10.1016/j.neuron.2018.08.037 Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., Dunne, J., Roat, J., Joyce, P., Bogovic, J. ., Jefferis, G. S. X. E., Murthy, M., Card, G., & FlyWire Consortium. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi:10.1101/2025.07.31.667571","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.skels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LHPD2a1 Neuron Skeletons from BANC Connectome — banc.skels","text":"","code":"if (FALSE) { # \\dontrun{ library(nat) library(nat.ggplot)  # Plot the neurons plot3d(banc.skels)  # Use with ggplot2 library(ggplot2) ggplot() + geom_neuron(banc.skels, rotation_matrix = banc_view) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":null,"dir":"Reference","previous_headings":"","what":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"data frame containing synapse locations metadata 5 LHPD2a1 neurons BANC connectome dataset. row represents single synapse 3D position pre/post synaptic classification.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"","code":"banc.syns"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"data frame columns: connector_id Unique identifier synapse connector pre_id Pre-synaptic neuron ID post_id Post-synaptic neuron ID prepost Binary indicator: 0 presynaptic (output), 1 postsynaptic (input) pre_svid Pre-synaptic supervoxel ID post_svid Post-synaptic supervoxel ID size Size synapse X, Y, Z 3D coordinates synapse nanometers treenode_id Node ID skeleton synapse located root_id root ID neuron synapse belongs ","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"BANC connectome dataset (Bates et al., 2025). Data accessed via bancr package.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"Bates, . S., Phelps, J. S., Kim, M., Yang, H. H., Matsliah, ., Ajabi, Z., Perlman, E., Dunne, J., Roat, J., Joyce, P., Bogovic, J. ., Jefferis, G. S. X. E., Murthy, M., Card, G., & FlyWire Consortium. (2025). Distributed control circuits across brain--cord connectome. bioRxiv. doi:10.1101/2025.07.31.667571","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc.syns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LHPD2a1 Neuron Synapses from BANC Connectome — banc.syns","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) library(nat.ggplot)  # Plot synapses coloured by type ggplot(banc.syns, aes(x = X, y = Y)) +   geom_point(aes(colour = factor(prepost)), alpha = 0.5) +   scale_colour_manual(values = c(\"0\" = \"#D72000\", \"1\" = \"#132157\"),                      labels = c(\"Presynaptic\", \"Postsynaptic\")) +   coord_fixed() } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":null,"dir":"Reference","previous_headings":"","what":"BANC Frontal View Rotation Matrix — banc_view","title":"BANC Frontal View Rotation Matrix — banc_view","text":"4x4 rotation matrix displaying BANC connectome data frontal view. matrix can applied 3D neuroanatomy data rotate standard frontal viewing orientation. Provded example user.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BANC Frontal View Rotation Matrix — banc_view","text":"","code":"banc_view"},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BANC Frontal View Rotation Matrix — banc_view","text":"4x4 numeric matrix representing 3D rotation transformation.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BANC Frontal View Rotation Matrix — banc_view","text":"Derived bancr:::banc_rotation_matrices[[\"front\"]].","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"BANC Frontal View Rotation Matrix — banc_view","text":"Users can create custom rotation matrices interactively using rgl_view() function positioning neurons desired orientation plot3d().","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/banc_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BANC Frontal View Rotation Matrix — banc_view","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot) library(nat) library(ggplot2)  # Use the frontal view for plotting ggplot() +   geom_neuron(banc.skels, rotation_matrix = banc_view)  # Create a custom view interactively plot3d(banc.brain_neuropil) # Rotate to desired angle with mouse my_view <- rgl_view()$userMatrix # Use custom view ggplot() +   geom_neuron(banc.brain_neuropil, rotation_matrix = my_view) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/check_package_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Package is Available and Prompt Installation — check_package_available","title":"Check if a Package is Available and Prompt Installation — check_package_available","text":"Internal function check required package available. , provides helpful error message installation instructions.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/check_package_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Package is Available and Prompt Installation — check_package_available","text":"","code":"check_package_available(pkg, reason = NULL)"},{"path":"https://natverse.github.io/nat.ggplot/reference/check_package_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Package is Available and Prompt Installation — check_package_available","text":"pkg Character string naming package check reason Optional character string explaining package needed","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/check_package_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Package is Available and Prompt Installation — check_package_available","text":"Invisible TRUE package available, otherwise throws error","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/g.anat.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","title":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","text":"pre-configured ggplot2 template minimal theme optimised neuroanatomy visualisations. object provides clean base axes, grids, extraneous elements, allowing focus remain neuroanatomical structures.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/g.anat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","text":"","code":"g.anat"},{"path":"https://natverse.github.io/nat.ggplot/reference/g.anat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","text":"ggplot2 object : coord_fixed() Maintains aspect ratio accurate morphology theme_void() Removes standard plot elements legends Guides fill colour hidden axes axis elements removed grids Panel grids removed Zero margins Plot margins set 0 Transparent background panel plot backgrounds transparent","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/g.anat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","text":"Use g.anat base neuroanatomy plots instead ggplot(). Simply add geom_neuron() layers base object.","code":""},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/reference/g.anat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Base ggplot2 Template for Neuroanatomy Plots — g.anat","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot)  # Use g.anat as the base for plotting neurons g.anat +   geom_neuron(banc.skels, rotation_matrix = banc_view)  # Add multiple layers g.anat +   geom_neuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols = c(\"grey95\", \"grey85\"),               alpha = 0.3) +   geom_neuron(banc.skels,               rotation_matrix = banc_view,               cols = c(\"purple\", \"magenta\")) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/geom_neuron.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","title":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","text":"function creates ggplot2 geom layer visualising neuron objects. supports 'neuron', 'neuronlist', 'mesh3d' objects. split neurons (created using flow centrality analysis Schneider-Mizell et al., 2016), colours axonal dendritic compartments differently.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/geom_neuron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","text":"","code":"geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'neuron' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'neuronlist' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'mesh3d' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'hxsurf' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class '`NULL`' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'list' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'matrix' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'data.frame' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'dotprops' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'synapticneuron' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )  # S3 method for class 'splitneuron' geom_neuron(   x = NULL,   rotation_matrix = NULL,   root = 3,   size = 0.5,   cols = c(\"navy\", \"turquoise\"),   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = FALSE,   threshold = Inf,   ... )"},{"path":"https://natverse.github.io/nat.ggplot/reference/geom_neuron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","text":"x 'neuron', 'neuronlist', 'mesh3d' object visualised. rotation_matrix optional 4x4 rotation matrix apply neuron coordinates. root Numeric, >0 x contains neuron objects, root node plotted dot size root. FALSE 0 root node plotted. size Numeric, line width neuron skeleton paths. Default 0.5. cols colour plot neurons . length(cols)==length(x) neuron coloured index x applied cols. stat statistical transformation use data layer. position Position adjustment, either string, result call position adjustment function. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. inherit.aes FALSE, overrides default aesthetics, rather combining . threshold minimum threshold healing neuron skeletons visualisation, using nat::stitch_neurons_mst. ... arguments passed layer().","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/geom_neuron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","text":"list ggplot2 geom layers visualising neuron.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/geom_neuron.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create ggplot2 Geom Layer for Neuron Visualisation — geom_neuron","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot)  # Plot a single neuron g.anat +   geom_neuron(banc.skels[[1]], rotation_matrix = banc_view)  # Plot all neurons with custom colours g.anat +   geom_neuron(banc.skels,               rotation_matrix = banc_view,               cols = c(\"purple\", \"magenta\"))  # Plot brain mesh as context g.anat +   geom_neuron(banc.brain_neuropil,               rotation_matrix = banc_view,               cols = c(\"grey75\", \"grey50\"),               alpha = 0.3)  # Plot split neurons showing axon/dendrite g.anat +   geom_neuron(banc.neurons.flow[[1]],               rotation_matrix = banc_view)  # Plot synapses as points g.anat +   geom_neuron(as.matrix(banc.syns[, c(\"X\", \"Y\", \"Z\")]),               rotation_matrix = banc_view,               root = 0.5,               cols = c(\"navy\", \"red\")) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"function creates complete ggplot2 visualisation neuron objects, including 'neuron', 'neuronlist', 'mesh3d', 'hxsurf' objects. sets minimal theme applies consistent styling plot.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"","code":"ggneuron(   x,   volume = NULL,   info = NULL,   rotation_matrix = NULL,   cols1 = c(\"turquoise\", \"navy\"),   cols2 = c(\"grey75\", \"grey50\"),   alpha = 0.5,   title.col = \"darkgrey\",   ... )"},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"x 'neuron', 'neuronlist', 'mesh3d', 'hxsurf' object visualised. volume brain/neuropil volume plotted grey, context. Defaults NULL, volume plotted. info Optional. string used plot title. rotation_matrix optional 4x4 rotation matrix apply neuron coordinates. cols1 Colour lowest Z values. Default \"turquoise\". cols2 Colour highest Z values. Default \"navy\". alpha Transparency neuron visualisation. Default 0.5. title.col Colour plot title. Default \"darkgrey\". ... Additional arguments passed geom_neuron().","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"ggplot2 object representing neuron visualisation.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"function wraps around geom_neuron() create complete plot consistent, minimal theme. removes axes, legends, extraneous elements focus neuron visualisation .","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"Jefferis, G. S. X. E., Potter, C. J., Chan, . M., Marin, E. C., Rohlfing, T., Maurer, C. R., & Luo, L. (2007). Comprehensive maps Drosophila higher olfactory centers: Spatially segregated fruit pheromone representation. Cell, 128(6), 1187-1203. doi:10.1016/j.cell.2007.01.040 Schneider-Mizell, C. M., Gerhard, S., Longair, M., Kazimiers, T., Li, F., Zwart, M. F., Champion, ., Midgley, F. M., Fetter, R. D., Saalfeld, S., & Cardona, . (2016). Quantitative neuroanatomy connectomics Drosophila. eLife, 5, e12059. doi:10.7554/eLife.12059","code":""},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/reference/ggneuron.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot2 Visualisation of Neuron Objects — ggneuron","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot)  # Visualise neurons with brain volume as context ggneuron(banc.skels,          volume = banc.brain_neuropil,          rotation_matrix = banc_view)  # Visualise the brain neuropil alone ggneuron(banc.brain_neuropil,          rotation_matrix = banc_view,          cols1 = c(\"lightblue\", \"darkblue\"))  # Visualise split neurons with custom colours ggneuron(banc.neurons.flow,          volume = banc.brain_neuropil,          rotation_matrix = banc_view,          info = \"LHPD2a1 neurons with axon/dendrite split\")  # Visualise neuron meshes ggneuron(banc.meshes[[1]],          rotation_matrix = banc_view,          cols1 = c(\"purple\", \"magenta\"),          alpha = 0.8) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/ggplot2_neuron_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","title":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","text":"function converts 'neuron', 'mesh3d', 'neuronlist' objects, represent 3D points linked lines space, data frames describe paths compatible ggplot2's geom_path, geom_polygon mesh3d objects. Neuron objects fundamental data structures natverse ecosystem representing neuronal morphology (see Jefferis et al., 2007; https://natverse.org/nat/articles/neurons-intro.html).","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggplot2_neuron_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","text":"","code":"ggplot2_neuron_path(x, rotation_matrix = NULL, ...)  # S3 method for class 'neuron' ggplot2_neuron_path(x, rotation_matrix = NULL, ...)  # S3 method for class 'neuronlist' ggplot2_neuron_path(x, rotation_matrix = NULL, ...)  # S3 method for class 'mesh3d' ggplot2_neuron_path(x, rotation_matrix = NULL, ...)  # S3 method for class '`NULL`' ggplot2_neuron_path(x, rotation_matrix = NULL, ...)"},{"path":"https://natverse.github.io/nat.ggplot/reference/ggplot2_neuron_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","text":"x 'neuron', 'neuronlist', 'mesh3d' object converted. rotation_matrix optional 4x4 rotation matrix apply neuron coordinates. ... Additional arguments passed methods.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/ggplot2_neuron_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","text":"data frame columns X, Y, Z, group, group represents continuous path neuron polygon mesh.","code":""},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/reference/ggplot2_neuron_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Neuron Objects to ggplot2-Compatible Data — ggplot2_neuron_path","text":"","code":"if (FALSE) { # \\dontrun{ library(nat.ggplot)  # Convert a single neuron to ggplot2-compatible format neuron_data <- ggplot2_neuron_path(banc.skels[[1]]) head(neuron_data)  # Plot with g.anat base g.anat +   geom_path(data = neuron_data,             aes(x = X, y = Y, group = group))  # Apply rotation matrix neuron_rotated <- ggplot2_neuron_path(banc.skels[[1]],                                        rotation_matrix = banc_view)  # Convert neuronlist neuronlist_data <- ggplot2_neuron_path(banc.skels)  # Convert mesh3d object mesh_data <- ggplot2_neuron_path(banc.brain_neuropil) } # }"},{"path":"https://natverse.github.io/nat.ggplot/reference/rgl_view.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","title":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","text":"Captures current viewing parameters active rgl window returns format suitable use rotation matrix nat.ggplot functions. allows users interactively find desired viewing angle using plot3d() apply view ggplot2 visualisations.","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/rgl_view.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","text":"","code":"rgl_view()"},{"path":"https://natverse.github.io/nat.ggplot/reference/rgl_view.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","text":"list containing: userMatrix 4x4 rotation matrix can used rotation_matrix parameter nat.ggplot functions zoom current zoom level windowRect window dimensions","code":""},{"path":"https://natverse.github.io/nat.ggplot/reference/rgl_view.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","text":"typical workflow : Plot neurons brain meshes using plot3d() nat package Interactively rotate view using mouse find desired angle Call rgl_view() capture current view parameters Use $userMatrix component rotation_matrix argument nat.ggplot functions like geom_neuron() ggneuron()","code":""},{"path":[]},{"path":"https://natverse.github.io/nat.ggplot/reference/rgl_view.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Current RGL View Parameters for Use as Rotation Matrix — rgl_view","text":"","code":"if (FALSE) { # \\dontrun{ library(nat) library(nat.ggplot) library(ggplot2)  # First, plot neurons in 3D and rotate to desired view plot3d(banc.brain_neuropil, alpha = 0.3) plot3d(banc.skels)  # Capture the view after rotating with mouse my_view <- rgl_view()  # Use the captured view in ggplot2 ggplot() +   geom_neuron(banc.brain_neuropil,               rotation_matrix = my_view$userMatrix,               cols = c(\"grey75\", \"grey50\"),               alpha = 0.3) +   geom_neuron(banc.skels,               rotation_matrix = my_view$userMatrix) } # }"}]
